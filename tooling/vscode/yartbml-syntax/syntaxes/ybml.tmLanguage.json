{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "fileTypes": ["ybml"],
  "name": "YARTBML",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constant"
    },
    {
      "include": "#function-definition"
    },
    {
      "include": "#variable-definition"
    }
  ],
  "repository": {
    "integer": {
      "match": "\\b[0-9]+\\b",
      "name": "constant.numeric.integer.ybml"
    },
    "boolean": {
      "match": "\\b(true|false)\\b",
      "name": "constant.language.boolean.ybml"
    },
    "comments": {
      "patterns": [
        {
          "match": "//.*",
          "name": "comment.line.ybml"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\blet\\b",
          "name": "keyword.declaration.let.ybml"
        },
        {
          "match": "\\b(fn|return|if|else)\\b",
          "name": "keyword.control.ybml"
        },
        {
          "match": "(==|!=|<|>)",
          "name": "keyword.operator.comparison.ybml"
        },
        {
          "match": "(\\+|\\-|\\*|\\/)",
          "name": "keyword.operator.arithmetic.ybml"
        },
        {
          "match": "=",
          "name": "keyword.operator.assignment.ybml"
        },
        {
          "match": "\\[|\\]|\\{|\\}|\\(|\\)|,|:",
          "name": "punctuation.separator.ybml"
        },
        {
          "match": ";",
          "name": "punctuation.terminator.ybml"
        },
        {
          "match": "\\b[a-zA-Z][a-zA-Z0-9_]*\\b",
          "name": "variable.other.identifier.ybml"
        },
        {
          "match": "[ \\t\\n]+",
          "name": "whitespace.ybml"
        }
      ]
    },
    "function-definition": {
      "begin": "(\\blet\\s+)(\\w+)(\\s*=\\s*fn\\s*\\()",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.let.ybml"
        },
        "2": {
          "name": "entity.name.function.ybml"
        },
        "3": {
          "name": "keyword.other.fn.ybml"
        }
      },
      "end": "\\);",
      "name": "meta.function.ybml",
      "patterns": [
        {
          "include": "#control-structure"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "variable-definition": {
      "match": "\\blet\\s+(\\w+)\\s*=",
      "captures": {
        "1": {
          "name": "variable.other.definition.ybml"
        }
      }
    },
    "control-structure": {
      "begin": "\\b(if|else)\\b\\s*\\(",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.ybml"
        }
      },
      "end": "\\)",
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "match": "\\b(return)\\b",
          "name": "keyword.control.ybml"
        },
        {
          "match": "\\b[0-9]+\\b",
          "name": "constant.numeric.ybml"
        },
        {
          "match": "==|\\+|-|\\*|/",
          "name": "keyword.operator.ybml"
        },
        {
          "match": "\\b\\w+\\b",
          "name": "variable.other.ybml"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.ybml",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.ybml",
          "match": "\\\\."
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "include": "#boolean"
        },
        {
          "include": "#integer"
        }
      ]
    }
  },
  "scopeName": "source.ybml"
}
