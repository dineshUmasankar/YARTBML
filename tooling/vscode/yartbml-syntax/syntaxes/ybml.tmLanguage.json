{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "fileTypes": ["ybml"],
  "name": "YARTBML",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constant"
    }
  ],
  "repository": {
    "integer": {
      "match": "\\b[0-9]+\\b",
      "name": "constant.numeric.integer.ybml",
      "patterns": []
    },
    "boolean": {
      "match": "\\b(true|false)\\b",
      "name": "constant.language.boolean.ybml",
      "patterns": []
    },
    "comments": {
      "patterns": [
        {
          "match": "//.*",
          "name": "comment.line.ybml"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(let|fn|return|if|else)\\b",
          "name": "keyword.control.ybml"
        },
        {
          "match": "(==|!=|<|>)",
          "name": "keyword.operator.comparison.int.ybml"
        },
        {
          "match": "(\\+|\\-|\\*|\\/)\\b",
          "name": "keyword.operator.arithmetic.int.ybml"
        },
        {
          "match": "=",
          "name": "keyword.operator.assignment.ybml"
        },
        {
          "match": "\\[|\\]|\\{|\\}|\\(|\\)|,|:",
          "name": "punctuation.separator.ybml"
        },
        {
          "match": ";",
          "name": "punctuation.terminator.ybml"
        },
        {
          "match": "\\b[a-zA-Z][a-zA-Z0-9_]*\\b",
          "name": "variable.other.identifier.ybml"
        },
        {
          "match": "[ \\t\\n]+",
          "name": "whitespace.ybml"
        },
        {
          "begin": "\\b(fn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.function.ybml"
            },
            "2": {
              "name": "entity.name.function.ybml"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.ybml"
            }
          },
          "patterns": [
            {
              "include": "#function_parameters"
            }
          ]
        }
      ]
    },
    "function_parameters": {
      "patterns": [
        {
          "match": "\\b[a-zA-Z][a-zA-Z0-9_]*\\b",
          "name": "variable.parameter.function.ybml"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.ybml",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.ybml",
          "match": "\\\\."
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "include": "#boolean"
        },
        {
          "include": "#integer"
        },
        {
          "match": "[[:upper:]][[:word:]]*",
          "name": "entity.name.type.ybml"
        }
      ]
    }
  },
  "scopeName": "source.ybml"
}
